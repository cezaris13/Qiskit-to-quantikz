#+TITLE: Qiskit to Quantikz LaTeX Renderer

* Overview
This module provides utilities to convert Qiskit's `QuantumCircuit` objects into LaTeX using the Quantikz package. It supports:
- Slicing circuits into subcircuits
- Annotating slices with `\slice{}` labels
- Detailed gate rendering with parameter support
- Automatic handling of classical bits (clbits)

* Features
- Split circuits by index or into equal-sized chunks
- Render quantum and classical wires
- Gate-specific LaTeX rendering for:
  - Measurements
  - SWAP and CSWAP
  - Controlled gates (CX, CZ, CRX, etc.)
  - Parametrized rotations (RX, RY, RZ)
  - Custom unitary matrices rendering
- Optional in-place slice labeling

* Installation
To install the package and its dependencies, run:
#+BEGIN_SRC sh
pip install qiskit-to-quantikz-cezaris13 -i https://test.pypi.org/simple/
#+END_SRC

* Usage

** Basic Rendering
To convert a single Qiskit circuit:
#+BEGIN_SRC python
from qiskit import QuantumCircuit
import qiskit_to_quantikz_cezaris13.qiskit_quantikz as qq

qc = QuantumCircuit(2, 2)
qc.h(0)
qc.cx(0, 1)
qc.measure([0, 1], [0, 1])

latex = qq.qiskit_to_quantikz(qc)
print(latex)
#+END_SRC

** Splitting Circuit into Slices
To split into 3 equal parts:
#+BEGIN_SRC python
latex_parts = qq.qiskit_to_quantikz(qc, num_subcircuits=3)
#+END_SRC
#+attr_html: :alt  :align left :class imgS
#+CAPTION: Qiskit representation
#+NAME:   fig:SED-HR4049
[[./Images/qiskit.jpeg]]

#+attr_html: :alt  :align left :class img
[[./Images/quantikz.jpeg][Quantikz representation]]
** Manual Slice Annotation
To annotate slices inline with custom titles:
#+BEGIN_SRC python
slice_titles = {0: "|\psi_0\rangle", 1: "|\psi_1\rangle", 2: "|\psi_2\rangle"}
latex = qq.qiskit_to_quantikz(qc, slice_titles=slice_titles)
#+END_SRC
#+attr_html: :alt  :align left :class img
[[./Images/quantikz_slices.jpeg][Quantikz slices]]



* Requirements
- Python 3.10+
- Qiskit
- LaTeX with TikZ and Quantikz installed
