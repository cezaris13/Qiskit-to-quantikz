#+TITLE: Qiskit to Quantikz LaTeX Renderer

* Overview
This module provides utilities to convert Qiskit's `QuantumCircuit` objects into LaTeX using the Quantikz package. It supports:
- Slicing circuits into subcircuits
- Annotating slices with `\slice{}` labels
- Detailed gate rendering with parameter support
- Automatic handling of classical bits (clbits)

* Features
- Split circuits by index or into equal-sized chunks
- Render quantum and classical wires
- Gate-specific LaTeX rendering for:
  - Measurements
  - SWAP and CSWAP
  - Controlled gates (CX, CZ, CRX, etc.)
  - Parametrized rotations (RX, RY, RZ)
- Optional in-place slice labeling

* Installation
To install the package and its dependencies, run:
#+BEGIN_SRC sh
pip install qiskit-to-quantikz-cezaris13 -i https://test.pypi.org/simple/
#+END_SRC

* Usage

** Basic Rendering
To convert a single Qiskit circuit:
#+BEGIN_SRC python
from qiskit import QuantumCircuit
import qiskit_to_quantikz_cezaris13.qiskit_quantikz as qq

qc = QuantumCircuit(2, 2)
qc.h(0)
qc.cx(0, 1)
qc.measure([0, 1], [0, 1])

latex = qq.qiskit_to_quantikz(qc)
print(latex)
#+END_SRC

** Splitting Circuit into Slices
To split into 3 equal parts:
#+BEGIN_SRC python
latex_parts = qq.qiskit_to_quantikz(qc, n_slices=3)
#+END_SRC

** Manual Slice Annotation
To annotate slices inline with custom titles:
#+BEGIN_SRC python
slice_titles = {0: "Init", 1: "Entangle", 2: "Measure"}
latex = qq.qiskit_to_quantikz(qc, slice_all=True, slice_titles=slice_titles)
#+END_SRC

* Requirements
- Python 3.10+
- Qiskit
- LaTeX with TikZ and Quantikz installed
